// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ticket_System.Models;

#nullable disable

namespace Ticket_System.Migrations
{
    [DbContext(typeof(TicketDBContext))]
    partial class TicketDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ticket_System.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "QA"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "RD"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "PM"
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.TicketAction", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionId"), 1L, 1);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int");

                    b.HasKey("ActionId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("TicketAction");

                    b.HasData(
                        new
                        {
                            ActionId = 1,
                            ActionName = "Add",
                            TicketTypeId = 1
                        },
                        new
                        {
                            ActionId = 2,
                            ActionName = "Delete",
                            TicketTypeId = 1
                        },
                        new
                        {
                            ActionId = 3,
                            ActionName = "Edit",
                            TicketTypeId = 1
                        },
                        new
                        {
                            ActionId = 4,
                            ActionName = "Resolve",
                            TicketTypeId = 1
                        },
                        new
                        {
                            ActionId = 5,
                            ActionName = "Resolve",
                            TicketTypeId = 3
                        },
                        new
                        {
                            ActionId = 6,
                            ActionName = "Resolve",
                            TicketTypeId = 2
                        },
                        new
                        {
                            ActionId = 7,
                            ActionName = "Add",
                            TicketTypeId = 3
                        },
                        new
                        {
                            ActionId = 8,
                            ActionName = "Add",
                            TicketTypeId = 2
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.TicketActionRules", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("TicketActionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("RoleId", "TicketActionId");

                    b.HasIndex("TicketActionId");

                    b.ToTable("TicketActionRules");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            TicketActionId = 1,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1,
                            TicketActionId = 2,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1,
                            TicketActionId = 3,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1,
                            TicketActionId = 5,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 2,
                            TicketActionId = 4,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 2,
                            TicketActionId = 6,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1,
                            TicketActionId = 7,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 3,
                            TicketActionId = 8,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.Tickets", b =>
                {
                    b.Property<int>("TicketsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketsId"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Resolved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TicketsId");

                    b.HasIndex("TicketTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketsId = 1,
                            CreateTime = new DateTime(2022, 4, 10, 23, 33, 5, 128, DateTimeKind.Local).AddTicks(5120),
                            Description = "xxxx",
                            Resolved = false,
                            Summary = "12qqqq3rrr",
                            TicketTypeId = 1
                        },
                        new
                        {
                            TicketsId = 2,
                            CreateTime = new DateTime(2022, 4, 10, 23, 33, 5, 128, DateTimeKind.Local).AddTicks(5129),
                            Description = "😂",
                            Resolved = false,
                            Summary = "123rttrtrrr",
                            TicketTypeId = 1
                        },
                        new
                        {
                            TicketsId = 3,
                            CreateTime = new DateTime(2022, 4, 10, 23, 33, 5, 128, DateTimeKind.Local).AddTicks(5131),
                            Description = "😀",
                            Resolved = false,
                            Summary = "123xxxxrrr",
                            TicketTypeId = 2
                        },
                        new
                        {
                            TicketsId = 4,
                            CreateTime = new DateTime(2022, 4, 10, 23, 33, 5, 128, DateTimeKind.Local).AddTicks(5132),
                            Description = "😎😎",
                            Resolved = false,
                            Summary = "123ssssrrr",
                            TicketTypeId = 3
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.TicketType", b =>
                {
                    b.Property<int>("TicketTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketTypeId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketTypeId");

                    b.ToTable("TicketType");

                    b.HasData(
                        new
                        {
                            TicketTypeId = 1,
                            Name = "Bug"
                        },
                        new
                        {
                            TicketTypeId = 2,
                            Name = "Feature Request"
                        },
                        new
                        {
                            TicketTypeId = 3,
                            Name = "Test Case"
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.TicketTypeRules", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("TicketTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("RoleId", "TicketTypeId");

                    b.HasIndex("TicketTypeId");

                    b.ToTable("TicketTypeRules");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            TicketTypeId = 1,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 1,
                            TicketTypeId = 3,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            RoleId = 3,
                            TicketTypeId = 2,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "QA",
                            Password = "QA",
                            UserRoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "RD",
                            Password = "RD",
                            UserRoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "PM",
                            Password = "PM",
                            UserRoleId = 3
                        });
                });

            modelBuilder.Entity("Ticket_System.Models.TicketAction", b =>
                {
                    b.HasOne("Ticket_System.Models.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("Ticket_System.Models.TicketActionRules", b =>
                {
                    b.HasOne("Ticket_System.Models.Role", "Role")
                        .WithMany("TicketActionRules")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket_System.Models.TicketAction", "TicketAction")
                        .WithMany("TicketActionRules")
                        .HasForeignKey("TicketActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("TicketAction");
                });

            modelBuilder.Entity("Ticket_System.Models.Tickets", b =>
                {
                    b.HasOne("Ticket_System.Models.TicketType", "TicketType")
                        .WithMany()
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket_System.Models.User", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UserId");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("Ticket_System.Models.TicketTypeRules", b =>
                {
                    b.HasOne("Ticket_System.Models.Role", "Role")
                        .WithMany("TicketRules")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ticket_System.Models.TicketType", "TicketType")
                        .WithMany("TicketRules")
                        .HasForeignKey("TicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("Ticket_System.Models.User", b =>
                {
                    b.HasOne("Ticket_System.Models.Role", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Ticket_System.Models.Role", b =>
                {
                    b.Navigation("TicketActionRules");

                    b.Navigation("TicketRules");
                });

            modelBuilder.Entity("Ticket_System.Models.TicketAction", b =>
                {
                    b.Navigation("TicketActionRules");
                });

            modelBuilder.Entity("Ticket_System.Models.TicketType", b =>
                {
                    b.Navigation("TicketRules");
                });

            modelBuilder.Entity("Ticket_System.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
